from mapa import *
from node import *


def deadlock_corner(self,box):
    #The following deadlock is for corners this also inclues corners generated by boxes
    #eg1: A wall on top and left is a deadlock
    #eg2: A wall on top and a box on the right is a deadlock
    (x,y) = box.position
    
    #Validation and macro atribution of the tiles
    up = mapa.get_tile((x,y+1))
    down = mapa.get_tile((x,y-1))
    left = mapa.get_tile((x-1,y))
    right = mapa.get_tile((x+1,y))

    #checking top left
    if((up in [Tiles.WALL] or up in [Tiles.BOX]) and left in [Tiles.WALL]): 
        return True

    #checling top right
    elif(up in [Tiles.WALL] and right in [Tiles.WALL]):
        return True

    #checking bottom left
    elif(down in [Tiles.WALL] and left in [Tiles.WALL]):
        return True

    #checking bottom right
    elif(down in [Tiles.WALL] and right in [Tiles.WALL]):
        return True   

    else:
        return False 

def deadlock_wall(self,box):
    
    (x,y) = box.position
    
    #Validation and macro atribution of the tiles
    up = mapa.get_tile((x,y+1))
    down = mapa.get_tile((x,y-1))
    left = mapa.get_tile((x-1,y))
    right = mapa.get_tile((x+1,y))
    
    #top wall
    #bottom wall
    #left wall
    #right wall

    pass


    
